FROM ubuntu:latest
ARG SCRIPTS_DIR='/scripts'

# Swapping to root for installation
USER root

# Installing packages
RUN mkdir -p ${SCRIPTS_DIR}
RUN apt-get update\
    && apt-get install -y \
        curl \
        wget \
        git \
        iputils-ping \
        openssh-client \
        libicu-dev \
        podman \
    && rm -rf /var/lib/apt/lists/*

COPY --chmod=755 docker/scripts/install_dotnet.sh ${SCRIPTS_DIR}/install_dotnet.sh
RUN ${SCRIPTS_DIR}/install_dotnet.sh

ENV PATH="$PATH:/root/.dotnet/tools"
ENV DOTNET_EnableWriteXorExecute=0

COPY --chmod=755 docker/scripts/install_mssql_tools.sh ${SCRIPTS_DIR}/install_mssql_tools.sh
RUN ${SCRIPTS_DIR}/install_mssql_tools.sh

# Installing AZ Cli
RUN apt-get update \
    && update-ca-certificates \
    && curl --progress-bar -L https://aka.ms/InstallAzureCLIDeb | bash

# Installing Bicep
RUN curl -Lo /usr/local/bin/bicep https://github.com/Azure/bicep/releases/latest/download/bicep-linux-$(dpkg --print-architecture)

# Install SQL templates
RUN dotnet tool install -g Microsoft.SqlPackage

# install Microsoft.Build.Sql.Templates
RUN dotnet new install Microsoft.Build.Sql.Templates

# Creating user for vscode. 
# Running as root is bad practice.
# Create the user
ARG USERNAME=vscode
ARG USER_UID=1001
ARG USER_GID=$USER_UID

RUN groupadd --gid $USER_GID $USERNAME \
    && useradd --uid $USER_UID --gid $USER_GID -m $USERNAME \
    #
    # [Optional] Add sudo support. Omit if you don't need to install software after connecting.
    && apt-get update \
    && apt-get install -y sudo \
    && echo $USERNAME ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME \
    && chmod 0440 /etc/sudoers.d/$USERNAME

USER $USERNAME